name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Show npm version
        run: npm --version

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm run test

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags:  ${{ secrets.DOCKER_USERNAME }}/dockerimage:${{ github.sha }}

      - name: Deploy to AWS EC2 instance
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
        with:
          script: |
            # Pull the Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/dockerimage:${{ github.sha }}

            # Stop and remove the existing Docker container (if it exists)
            docker stop dockerimage || true
            docker rm dockerimage || true

            # Run the new Docker container, exposing the application's port
            docker run -d --name dockerimage -p 8080:80 ${{ secrets.DOCKER_USERNAME}}/dockerimage:${{ github.sha }}


